server:
  port: 8080
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/learning?allowPublicKeyRetrieval=true&serverTimezone=UTC&useSSL=false
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      minimum-idle: 5 #该属性控制HikariCP尝试在池中维护的最小空闲连接数。如果空闲连接低于此值并且连接池中的总连接数少于此值maximumPoolSize，则HikariCP将尽最大努力快速高效地添加其他连接。但是，为了获得最佳性能和响应尖峰需求，我们建议不要设置此值，而是允许HikariCP充当固定大小的连接池。 默认值：与maximumPoolSize相同
      maximum-pool-size: 15 #此属性控制池允许达到的最大大小，包括空闲和正在使用的连接。基本上这个值将决定到数据库后端的最大实际连接数。对此的合理价值最好由您的执行环境决定。当池达到此大小并且没有空闲连接可用时，对getConnection（）的调用将connectionTimeout在超时前阻塞达几毫秒。请阅读关于游泳池尺寸。 默认值：10
      auto-commit: true #此属性控制从池返回的连接的默认自动提交行为。它是一个布尔值。 默认值：true
      idle-timeout: 30000 #此属性控制允许连接在池中闲置的最长时间。 此设置仅适用于minimumIdle定义为小于maximumPoolSize。一旦池达到连接，空闲连接将不会退出minimumIdle。连接是否因闲置而退出，最大变化量为+30秒，平均变化量为+15秒。在超时之前，连接永远不会退出。值为0意味着空闲连接永远不会从池中删除。允许的最小值是10000ms（10秒）。 默认值：600000（10分钟）
      pool-name: DatebookHikariCP # 此属性表示连接池的用户定义名称，主要出现在日志记录和JMX管理控制台中以识别池和池配置。 默认：自动生成
      max-lifetime: 1800000 #此属性控制池中连接的最大生存期。正在使用的连接永远不会退休，只有在关闭后才会被删除。在逐个连接的基础上，应用较小的负面衰减来避免池中的大量消失。 我们强烈建议设置此值，并且应该比任何数据库或基础设施规定的连接时间限制短几秒。 值为0表示没有最大寿命（无限寿命），当然是idleTimeout设定的主题。 默认值：1800000（30分钟）
      connection-timeout: 300 #此属性控制客户端（即您）将等待来自池的连接的最大毫秒数。如果在没有可用连接的情况下超过此时间，则会抛出SQLException。最低可接受的连接超时时间为250 ms。 默认值：30000（30秒）
      connection-test-query: SELECT 1 #如果您的驱动程序支持JDBC4，我们强烈建议您不要设置此属性。这是针对不支持JDBC4的“传统”驱动程序Connection.isValid() API。这是在连接从池中获得连接以确认与数据库的连接仍然存在之前将要执行的查询。再一次，尝试运行没有此属性的池，如果您的驱动程序不符合JDBC4的要求，HikariCP将记录一个错误以告知您。 默认值：无
      health-check-registry: # 该属性仅通过编程配置或IoC容器可用。该属性允许您指定池使用的Codahale / Dropwizard 的实例HealthCheckRegistry来报告当前的健康信息。有关 详细信息，请参阅健康检查 wiki页面。 默认值：无
        metric-registry:  #该属性仅通过编程配置或IoC容器可用。该属性允许您指定池使用的Codahale / Dropwizard 实例MetricRegistry来记录各种指标。有关 详细信息，请参阅Metrics维基页面。 默认值：无
  redis:
    sentinel:
      master: mymaster
      nodes: 192.168.180.11:26379,192.168.180.11:26380
    password: 123
  kafka:
    client-id: kafka-producer
    #kafka默认生产者配置
    producer:
      bootstrap-servers: 192.168.0.15:9092
      acks: -1
      batch-size: 5
    #kafka默认消费者配置
    consumer:
      bootstrap-servers: 192.168.0.15:9092
      enable-auto-commit: false
      auto-offset-reset: earliest
  security:
    user:
      name: actuator
      password: actuator
      roles: ACTUATOR_ADMIN
mybatis-plus:
  mapper-locations: classpath*:com/leopold/javalearning/springboot/mapper/*.xml
  type-aliases-package: com.lihaowu.springactuator.model
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
management:
  endpoints:
    web:
      exposure:
        include: "*"
